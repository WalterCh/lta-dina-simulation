library(MplusAutomation)
install.packages("MplusAutomation")
getwd()
# function in Scripts/data_sim_function.R
source("Dina_simulation_function.R")
# Packages
library(MplusAutomation)
# Model
runModels("C:/Users/Usuario/Dropbox/Dina/mplus", showOutput = TRUE)
getwd()
Q <- matrix(c(1,0,0,0,1,0,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,0,
1,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,1,1,
1,1,0,1,0,1,1,0,0,1,1,0,0,0),
ncol = 4, nrow = 20, byrow = TRUE)
dina <- dina_data_sim(slip_guess_min = .1, slip_guess_max = .3, Q = Q)
dina$sim_dina
# Preparing data
prepareMplusData(dina$sim_dina, "../Data/lta_dina.dat")
# Model
runModels("C:/Users/Usuario/Dropbox/Dina/mplus", showOutput = TRUE)
output <- readModels("C:/Users/Usuario/Dropbox/Dina/mplus/lta_dina.out")
output$input
output$warnings
output$errors
output$data_summary
output$sampstat
output$covariance_coverage
output$summaries
output$parameters
dina$sim_dina
output$parameters
output$class_counts
output$tech9
output$fac_score_stats
getwd()
list.files()
list.files("..")
list.files("../Data")
class(output)
save.image("C:/Users/Usuario/Dropbox/Dina/R-Scripts/environment.RData")
load("C:/Users/Usuario/Dropbox/Dina/R-Scripts/environment.RData")
# function in Scripts/data_sim_function.R
source("Dina_simulation_function.R")
# Q- matrix
Q <- matrix(c(1,0,0,0,1,0,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,0,
1,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,1,1,
1,1,0,1,0,1,1,0,0,1,1,0,0,0),
ncol = 4, nrow = 20, byrow = TRUE)
# function in Scripts/data_sim_function.R
source("Dina_simulation_function.R")
# Q- matrix
Q <- matrix(c(1,0,0,0,1,0,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,0,
1,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,1,1,
1,1,0,1,0,1,1,0,0,1,1,0,0,0),
ncol = 4, nrow = 20, byrow = TRUE)
dina <- dina_data_sim(slip_guess_min = .1, slip_guess_max = .3, Q = Q)
# Packages
library(MplusAutomation)
# Packages
library(MplusAutomation)
# Preparing data
prepareMplusData(dina$sim_dina, "../Data/lta_dina.dat")
# Model
runModels("C:/Users/Usuario/Dropbox/Dina/mplus", showOutput = TRUE)
output <- readModels("C:/Users/Usuario/Dropbox/Dina/mplus/lta_dina.out")
output
load("C:/Users/Usuario/Dropbox/Dina/R-Scripts/environment.RData")
environment.RData
load("C:/Users/Usuario/Dropbox/Dina/R-Scripts/environment.RData")
# function in Scripts/data_sim_function.R
source("Dina_simulation_function.R")
# Q- matrix
Q <- matrix(c(1,0,0,0,1,0,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,0,
1,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,1,1,
1,1,0,1,0,1,1,0,0,1,1,0,0,0),
ncol = 4, nrow = 20, byrow = TRUE)
dina <- dina_data_sim(slip_guess_min = .1, slip_guess_max = .3, Q = Q)
dina <- dina_data_sim(slip_guess_min = .1, slip_guess_max = .3, Q = Q)
# Packages
library(MplusAutomation)
# Packages
library(MplusAutomation)
# Preparing data
prepareMplusData(dina$sim_dina, "../Data/lta_dina.dat")
# Preparing data
prepareMplusData(dina$sim_dina, "../Data/lta_dina.dat")
# Model
runModels("C:/Users/Usuario/Dropbox/Dina/mplus", showOutput = TRUE)
output <- readModels("C:/Users/Usuario/Dropbox/Dina/mplus/lta_dina.out")
output
load("C:/Users/Usuario/Dropbox/Dina/R-Scripts/environment.RData")
# Model
runModels("C:/Users/Usuario/Dropbox/Dina/mplus", showOutput = TRUE)
# function in Scripts/data_sim_function.R
source("Dina_simulation_function.R")
# Q- matrix
Q <- matrix(c(1,0,0,0,1,0,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,0,
1,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,1,1,
1,1,0,1,0,1,1,0,0,1,1,0,0,0),
ncol = 4, nrow = 20, byrow = TRUE)
dina <- dina_data_sim(slip_guess_min = .1, slip_guess_max = .3, Q = Q)
dina <- dina_data_sim(slip_guess_min = .1, slip_guess_max = .3, Q = Q)
# Packages
library(MplusAutomation)
library(dplyr)
# Packages
library(MplusAutomation)
library(dplyr)
# Preparing data
prepareMplusData(dina$sim_dina, "../Data/lta_dina.dat")
# Model
runModels("C:/Users/Usuario/Dropbox/Dina/mplus", showOutput = TRUE)
output2 <- readModels("C:/Users/Usuario/Dropbox/Dina/mplus/lta_dina.out")
# Savedata analysis
savedata <- as.tbl(output2$savedata)
savedata_prof <- savedata %>%
select(C1:C8) %>%
mutate(C1 = ifelse(C1 == 2, 1, 0), # 2 es dominio y 1 es no dominio
C2 = ifelse(C2 == 2, 1, 0),
C3 = ifelse(C3 == 2, 1, 0),
C4 = ifelse(C4 == 2, 1, 0),
C5 = ifelse(C5 == 2, 1, 0),
C6 = ifelse(C6 == 2, 1, 0),
C7 = ifelse(C7 == 2, 1, 0),
C8 = ifelse(C8 == 2, 1, 0))
# tabla 4.4
p_transic <- tibble("Habilidades" = c("NÃºmero y Operaciones", "MediciÃ³n",
"SoluciÃ³n de problemas", "RepresentaciÃ³n"),
p_t1 = c(mean(dina$alphas$V2), mean(dina$alphas$V3),
mean(dina$alphas$V4), mean(dina$alphas$V5)),
p_t2 = c(mean(dina$alphas$V6), mean(dina$alphas$V7),
mean(dina$alphas$V8), mean(dina$alphas$V9)))
write.csv(p_transic, "./Tablas/P_Transicion.csv")
# 4.5
Q_tbl <- as.tbl(as.data.frame(Q))
prof_comb <- Q_tbl %>%
mutate(comb = paste0(V1, V2, V3, V4)) %>%
group_by(comb) %>%
summarise(n = n()) %>%
pull(comb)
alphas <- as.tbl(dina$alphas) %>%
select(-id)
colnames(alphas) = c(paste0("X", 1:4), paste0("Y", 1:4))
alphas_t1 <- alphas %>%
select(X1:X4) %>%
mutate(comb = paste0(X1, X2, X3, X4)) %>%
group_by(comb) %>%
summarise(n = n()) %>%
mutate(prop = n/sum(n))
alphas_t2 <- alphas %>%
select(Y1:Y4) %>%
mutate(comb = paste0(Y1, Y2, Y3, Y4)) %>%
group_by(comb) %>%
summarise(n = n()) %>%
mutate(prop = n/sum(n))
write.csv(alphas_t1, "./Tablas/Frec_Prop_T1.csv")
write.csv(alphas_t2, "./Tablas/Frec_Prop_T2.csv")
# 4.6
mean(alphas$X1)
mean(alphas$X2)
alphas_trans <- alphas %>%
mutate(X1_nm = ifelse(Y1 == 1 & X1 == 0, 1, 0),
X1_mm = ifelse(Y1 == 1 & X1 == 0, 1, 0),
X1_mn = ifelse(Y1 == 0 & X1 == 1, 1, 0),
X1_nn = ifelse(Y1 == 0 & X1 == 0, 1, 0),
X2_nm = ifelse(Y2 == 1 & X2 == 0, 1, 0),
X2_mm = ifelse(Y2 == 1 & X2 == 0, 1, 0),
X2_mn = ifelse(Y2 == 0 & X2 == 1, 1, 0),
X2_nn = ifelse(Y2 == 0 & X2 == 0, 1, 0),
X3_nm = ifelse(Y3 == 1 & X3 == 0, 1, 0),
X3_mm = ifelse(Y3 == 1 & X3 == 0, 1, 0),
X3_mn = ifelse(Y3 == 0 & X3 == 1, 1, 0),
X3_nn = ifelse(Y3 == 0 & X3 == 0, 1, 0),
X4_nm = ifelse(Y4 == 1 & X4 == 0, 1, 0),
X4_mm = ifelse(Y4 == 1 & X4 == 0, 1, 0),
X4_mn = ifelse(Y4 == 0 & X4 == 1, 1, 0),
X4_nn = ifelse(Y4 == 0 & X4 == 0, 1, 0),) %>%
select(X1_nm:X4_nn)
trans_mat <- matrix(colMeans(alphas_trans), nrow = 4, ncol = 4, byrow = TRUE)
tbl_trans <- tibble("Habilidades" = c("NÃºmero y Operaciones", "MediciÃ³n",
"SoluciÃ³n de problemas", "RepresentaciÃ³n"),
pm1 = c(mean(alphas$X1), mean(alphas$X2), mean(alphas$X3),
mean(alphas$X4)),
pmn = trans_mat[,1],
pmm = trans_mat[,2],
pnm = trans_mat[,3],
pnn = trans_mat[,4])
write.csv(tbl_trans, "./Tablas/4.6 Tabla_prop_trans.csv")
output2
# Model
runModels("C:/Users/Usuario/Dropbox/Dina/mplus", showOutput = TRUE)
install.packages(c("extrafont", "tikzDevice"))
load("C:/Users/Usuario/Dropbox/Dina/R-Scripts/environment.RData")
trans_plot
tikzDevice::tikz(file = "../Imagenes/Probabilidades_transicion.tex",
width = 6, height = 4)
warnings()
trans_plot
trans_plot
dev.off()
